import { Cards } from 'nextra/components'

function InterfaceIcon() {
  return (
    <svg className="reference-icon" width="256" height="256" viewBox="0 0 256 256" fill="none" xmlns="http://www.w3.org/2000/svg">
      <circle cx="128" cy="128" r="120" stroke="#F72684" strokeWidth="16" />
      <path d="M94.4313 185V171.56H120.031V93.64H94.4313V80.2H161.631V93.64H136.031V171.56H161.631V185H94.4313Z" fill="#F72684"/>
    </svg>
  )
}

const api = [
  ['navigator.ml', 'webnn/navigatorml'],
  ['ML', 'webnn/ml'],
  ['MLContext', 'webnn/mlcontext'],
  ['MLGraph', 'webnn/mlgraph'],
  ['MLOperand', 'webnn/mloperand'],
  ['MLTensor', 'webnn/mltensor'],
  ['MLGraphBuilder', 'webnn/mlgraphbuilder']
]

export function ReferenceCards() {
  return (
  <Cards>
    {api.map(([title, href], index) => (
      <Cards.Card 
        icon={<InterfaceIcon />}
        key={index} 
        title={title} 
        href={`./${href}`} 
      />
    ))}
  </Cards>
  )
}


function MethodIcon() {
  return (
    <svg className="reference-icon" width="256" height="256" viewBox="0 0 256 256" fill="none" xmlns="http://www.w3.org/2000/svg">
      <circle cx="128" cy="128" r="120" stroke="#00C8FF" strokeWidth="16"/>
      <mask id="path-2-outside-1_229_10" maskUnits="userSpaceOnUse" x="89" y="79" width="78" height="107" fill="black">
        <rect fill="white" x="89" y="79" width="78" height="107"/>
        <path d="M90.9113 185V80.2H109.471L123.071 122.92L127.711 139.24H128.351L132.991 122.92L146.591 80.2H165.151V185H150.431V137.8C150.431 135.133 150.538 132.04 150.751 128.52C150.965 124.893 151.178 121.16 151.391 117.32C151.711 113.48 151.978 109.853 152.191 106.44C152.511 103.027 152.778 100.093 152.991 97.64H152.511L145.951 120.2L132.671 157.16H122.751L109.631 120.2L103.231 97.64H102.751C103.071 100.093 103.338 103.027 103.551 106.44C103.871 109.853 104.138 113.48 104.351 117.32C104.565 121.16 104.778 124.893 104.991 128.52C105.205 132.04 105.311 135.133 105.311 137.8V185H90.9113Z"/>
      </mask>
      <path d="M90.9113 185V80.2H109.471L123.071 122.92L127.711 139.24H128.351L132.991 122.92L146.591 80.2H165.151V185H150.431V137.8C150.431 135.133 150.538 132.04 150.751 128.52C150.965 124.893 151.178 121.16 151.391 117.32C151.711 113.48 151.978 109.853 152.191 106.44C152.511 103.027 152.778 100.093 152.991 97.64H152.511L145.951 120.2L132.671 157.16H122.751L109.631 120.2L103.231 97.64H102.751C103.071 100.093 103.338 103.027 103.551 106.44C103.871 109.853 104.138 113.48 104.351 117.32C104.565 121.16 104.778 124.893 104.991 128.52C105.205 132.04 105.311 135.133 105.311 137.8V185H90.9113Z" fill="#00C8FF"/>
      <path d="M90.9113 185H89.9113V186H90.9113V185ZM90.9113 80.2V79.2H89.9113V80.2H90.9113ZM109.471 80.2L110.424 79.8966L110.202 79.2H109.471V80.2ZM123.071 122.92L124.033 122.647L124.029 122.632L124.024 122.617L123.071 122.92ZM127.711 139.24L126.749 139.513L126.956 140.24H127.711V139.24ZM128.351 139.24V140.24H129.107L129.313 139.513L128.351 139.24ZM132.991 122.92L132.038 122.617L132.034 122.632L132.029 122.647L132.991 122.92ZM146.591 80.2V79.2H145.86L145.638 79.8966L146.591 80.2ZM165.151 80.2H166.151V79.2H165.151V80.2ZM165.151 185V186H166.151V185H165.151ZM150.431 185H149.431V186H150.431V185ZM150.751 128.52L151.749 128.58L151.75 128.579L150.751 128.52ZM151.391 117.32L150.395 117.237L150.394 117.251L150.393 117.265L151.391 117.32ZM152.191 106.44L151.196 106.347L151.194 106.362L151.193 106.378L152.191 106.44ZM152.991 97.64L153.987 97.7266L154.082 96.64H152.991V97.64ZM152.511 97.64V96.64H151.761L151.551 97.3608L152.511 97.64ZM145.951 120.2L146.892 120.538L146.903 120.509L146.911 120.479L145.951 120.2ZM132.671 157.16V158.16H133.375L133.612 157.498L132.671 157.16ZM122.751 157.16L121.809 157.495L122.045 158.16H122.751V157.16ZM109.631 120.2L108.669 120.473L108.678 120.504L108.689 120.535L109.631 120.2ZM103.231 97.64L104.193 97.3671L103.987 96.64H103.231V97.64ZM102.751 97.64V96.64H101.612L101.76 97.7693L102.751 97.64ZM103.551 106.44L102.553 106.502L102.554 106.518L102.556 106.533L103.551 106.44ZM104.351 117.32L103.353 117.375L103.353 117.375L104.351 117.32ZM104.991 128.52L103.993 128.579L103.993 128.58L104.991 128.52ZM105.311 185V186H106.311V185H105.311ZM91.9113 185V80.2H89.9113V185H91.9113ZM90.9113 81.2H109.471V79.2H90.9113V81.2ZM108.518 80.5033L122.118 123.223L124.024 122.617L110.424 79.8966L108.518 80.5033ZM122.109 123.193L126.749 139.513L128.673 138.967L124.033 122.647L122.109 123.193ZM127.711 140.24H128.351V138.24H127.711V140.24ZM129.313 139.513L133.953 123.193L132.029 122.647L127.389 138.967L129.313 139.513ZM133.944 123.223L147.544 80.5033L145.638 79.8966L132.038 122.617L133.944 123.223ZM146.591 81.2H165.151V79.2H146.591V81.2ZM164.151 80.2V185H166.151V80.2H164.151ZM165.151 184H150.431V186H165.151V184ZM151.431 185V137.8H149.431V185H151.431ZM151.431 137.8C151.431 135.159 151.537 132.086 151.749 128.58L149.753 128.46C149.539 131.994 149.431 135.108 149.431 137.8H151.431ZM151.75 128.579C151.963 124.951 152.176 121.216 152.39 117.375L150.393 117.265C150.18 121.104 149.966 124.836 149.753 128.461L151.75 128.579ZM152.388 117.403C152.708 113.557 152.975 109.923 153.189 106.502L151.193 106.378C150.98 109.783 150.714 113.403 150.395 117.237L152.388 117.403ZM153.187 106.533C153.507 103.119 153.774 100.183 153.987 97.7266L151.995 97.5534C151.782 100.004 151.515 102.935 151.196 106.347L153.187 106.533ZM152.991 96.64H152.511V98.64H152.991V96.64ZM151.551 97.3608L144.991 119.921L146.911 120.479L153.471 97.9192L151.551 97.3608ZM145.01 119.862L131.73 156.822L133.612 157.498L146.892 120.538L145.01 119.862ZM132.671 156.16H122.751V158.16H132.671V156.16ZM123.694 156.825L110.574 119.865L108.689 120.535L121.809 157.495L123.694 156.825ZM110.593 119.927L104.193 97.3671L102.269 97.9129L108.669 120.473L110.593 119.927ZM103.231 96.64H102.751V98.64H103.231V96.64ZM101.76 97.7693C102.076 100.194 102.341 103.104 102.553 106.502L104.549 106.378C104.335 102.95 104.067 99.9928 103.743 97.5107L101.76 97.7693ZM102.556 106.533C102.874 109.933 103.14 113.547 103.353 117.375L105.35 117.265C105.136 113.413 104.868 109.774 104.547 106.347L102.556 106.533ZM103.353 117.375C103.566 121.216 103.78 124.951 103.993 128.579L105.99 128.461C105.776 124.836 105.563 121.104 105.35 117.265L103.353 117.375ZM103.993 128.58C104.206 132.086 104.311 135.159 104.311 137.8H106.311C106.311 135.108 106.204 131.994 105.989 128.46L103.993 128.58ZM104.311 137.8V185H106.311V137.8H104.311ZM105.311 184H90.9113V186H105.311V184Z" fill="#00C8FF" mask="url(#path-2-outside-1_229_10)"/>
    </svg>
  )
}

const api2 = [
  ['ml.createContext', 'webnn/ml#createcontext'],
  ['context.dispatch', 'webnn/mlcontext#dispatch'],
  ['context.createTensor', 'webnn/mlcontext#createtensor'],
  ['context.readTensor', 'webnn/mlcontext#readtensor'],
  ['context.writeTensor', 'webnn/mlcontext#writetensor'],
  ['context.opSupportLimits', 'webnn/mlcontext#opsupportlimits'],
  ['context.destory', 'webnn/mlcontext#destroy'],
  ['graph.destory', 'webnn/mlgraph#destroy'],
  ['tensor.destory', 'webnn/mltensor#destroy'],
  ['builder.input', 'webnn/mlgraphbuilder#input'],
  ['builder.constant', 'webnn/mlgraphbuilder#constant'],
  ['builder.build', 'webnn/mlgraphbuilder#build']
]

export function MethodCards() {
  return (
  <Cards>
    {api2.map(([title, href], index) => (
      <Cards.Card 
        icon={<MethodIcon />}
        key={index} 
        title={title} 
        href={`./${href}`} 
      />
    ))}
  </Cards>
  )
}

function CompatibilityIcon() {
  return (
    <svg className="reference-icon" width="256" height="256" viewBox="0 0 256 256" fill="none" xmlns="http://www.w3.org/2000/svg">
      <circle cx="128" cy="128" r="120" stroke="#FFAC4A" strokeWidth="16"/>
      <mask id="path-2-outside-1_232_3" maskUnits="userSpaceOnUse" x="88" y="77" width="83" height="111" fill="black">
        <rect fill="white" x="88" y="77" width="83" height="111"/>
        <path d="M136.351 186.92C129.845 186.92 123.765 185.747 118.111 183.4C112.565 180.947 107.658 177.427 103.391 172.84C99.2313 168.147 95.9246 162.44 93.4713 155.72C91.1246 149 89.9513 141.373 89.9513 132.84C89.9513 121.427 92.0313 111.667 96.1913 103.56C100.351 95.3467 106.005 89.1067 113.151 84.84C120.298 80.4667 128.458 78.28 137.631 78.28C144.031 78.28 149.738 79.6133 154.751 82.28C159.765 84.84 163.871 87.8267 167.071 91.24L158.111 101.32C155.445 98.44 152.405 96.2 148.991 94.6C145.685 93 141.898 92.2 137.631 92.2C131.445 92.2 126.005 93.8533 121.311 97.16C116.618 100.36 112.938 104.947 110.271 110.92C107.711 116.893 106.431 124.04 106.431 132.36C106.431 140.68 107.711 147.88 110.271 153.96C112.938 160.04 116.618 164.733 121.311 168.04C126.111 171.347 131.658 173 137.951 173C142.538 173 146.645 172.04 150.271 170.12C153.898 168.093 157.258 165.373 160.351 161.96L169.311 171.72C165.258 176.52 160.511 180.253 155.071 182.92C149.631 185.587 143.391 186.92 136.351 186.92Z"/>
      </mask>
      <path d="M136.351 186.92C129.845 186.92 123.765 185.747 118.111 183.4C112.565 180.947 107.658 177.427 103.391 172.84C99.2313 168.147 95.9246 162.44 93.4713 155.72C91.1246 149 89.9513 141.373 89.9513 132.84C89.9513 121.427 92.0313 111.667 96.1913 103.56C100.351 95.3467 106.005 89.1067 113.151 84.84C120.298 80.4667 128.458 78.28 137.631 78.28C144.031 78.28 149.738 79.6133 154.751 82.28C159.765 84.84 163.871 87.8267 167.071 91.24L158.111 101.32C155.445 98.44 152.405 96.2 148.991 94.6C145.685 93 141.898 92.2 137.631 92.2C131.445 92.2 126.005 93.8533 121.311 97.16C116.618 100.36 112.938 104.947 110.271 110.92C107.711 116.893 106.431 124.04 106.431 132.36C106.431 140.68 107.711 147.88 110.271 153.96C112.938 160.04 116.618 164.733 121.311 168.04C126.111 171.347 131.658 173 137.951 173C142.538 173 146.645 172.04 150.271 170.12C153.898 168.093 157.258 165.373 160.351 161.96L169.311 171.72C165.258 176.52 160.511 180.253 155.071 182.92C149.631 185.587 143.391 186.92 136.351 186.92Z" fill="#FFAC4A"/>
      <path d="M118.111 183.4L117.707 184.315L117.717 184.319L117.728 184.324L118.111 183.4ZM103.391 172.84L102.643 173.503L102.651 173.512L102.659 173.521L103.391 172.84ZM93.4713 155.72L92.5271 156.05L92.5319 156.063L93.4713 155.72ZM96.1913 103.56L97.081 104.017L97.0833 104.012L96.1913 103.56ZM113.151 84.84L113.664 85.6987L113.673 85.693L113.151 84.84ZM154.751 82.28L154.282 83.1629L154.289 83.1668L154.296 83.1706L154.751 82.28ZM167.071 91.24L167.819 91.9044L168.425 91.222L167.801 90.5561L167.071 91.24ZM158.111 101.32L157.377 101.999L158.126 102.808L158.859 101.984L158.111 101.32ZM148.991 94.6L148.556 95.5002L148.567 95.5055L148.991 94.6ZM121.311 97.16L121.875 97.9862L121.881 97.9819L121.887 97.9775L121.311 97.16ZM110.271 110.92L109.358 110.512L109.355 110.519L109.352 110.526L110.271 110.92ZM110.271 153.96L109.35 154.348L109.352 154.355L109.355 154.362L110.271 153.96ZM121.311 168.04L120.735 168.858L120.744 168.864L121.311 168.04ZM150.271 170.12L150.739 171.004L150.749 170.998L150.759 170.993L150.271 170.12ZM160.351 161.96L161.088 161.284L160.346 160.476L159.61 161.288L160.351 161.96ZM169.311 171.72L170.075 172.365L170.643 171.692L170.048 171.044L169.311 171.72ZM155.071 182.92L154.631 182.022L154.631 182.022L155.071 182.92ZM136.351 185.92C129.968 185.92 124.019 184.77 118.495 182.476L117.728 184.324C123.51 186.724 129.721 187.92 136.351 187.92V185.92ZM118.516 182.485C113.097 180.089 108.301 176.65 104.123 172.159L102.659 173.521C107.015 178.204 112.032 181.805 117.707 184.315L118.516 182.485ZM104.14 172.177C100.074 167.589 96.8269 161.996 94.4106 155.377L92.5319 156.063C95.0222 162.884 98.3888 168.704 102.643 173.503L104.14 172.177ZM94.4153 155.39C92.1122 148.795 90.9513 141.283 90.9513 132.84H88.9513C88.9513 141.464 90.137 149.205 92.5272 156.05L94.4153 155.39ZM90.9513 132.84C90.9513 121.546 93.0094 111.951 97.0809 104.017L95.3016 103.103C91.0531 111.383 88.9513 121.307 88.9513 132.84H90.9513ZM97.0833 104.012C101.167 95.9487 106.697 89.8582 113.664 85.6986L112.639 83.9814C105.313 88.3551 99.5352 94.7446 95.2992 103.108L97.0833 104.012ZM113.673 85.693C120.648 81.4248 128.624 79.28 137.631 79.28V77.28C128.292 77.28 119.948 79.5085 112.629 83.987L113.673 85.693ZM137.631 79.28C143.889 79.28 149.43 80.5824 154.282 83.1629L155.221 81.3971C150.045 78.6442 144.174 77.28 137.631 77.28V79.28ZM154.296 83.1706C159.227 85.6884 163.235 88.61 166.342 91.9239L167.801 90.5561C164.508 87.0433 160.302 83.9915 155.206 81.3894L154.296 83.1706ZM166.324 90.5756L157.364 100.656L158.859 101.984L167.819 91.9044L166.324 90.5756ZM158.845 100.641C156.094 97.67 152.951 95.3515 149.416 93.6945L148.567 95.5055C151.859 97.0485 154.795 99.21 157.377 101.999L158.845 100.641ZM149.427 93.6998C145.964 92.0243 142.024 91.2 137.631 91.2V93.2C141.771 93.2 145.405 93.9757 148.556 95.5002L149.427 93.6998ZM137.631 91.2C131.255 91.2 125.61 92.9077 120.735 96.3425L121.887 97.9775C126.399 94.7989 131.634 93.2 137.631 93.2V91.2ZM120.748 96.3338C115.879 99.6532 112.089 104.396 109.358 110.512L111.184 111.328C113.787 105.497 117.356 101.067 121.875 97.9862L120.748 96.3338ZM109.352 110.526C106.726 116.653 105.431 123.941 105.431 132.36H107.431C107.431 124.139 108.696 117.133 111.19 111.314L109.352 110.526ZM105.431 132.36C105.431 140.78 106.726 148.118 109.35 154.348L111.193 153.572C108.696 147.642 107.431 140.58 107.431 132.36H105.431ZM109.355 154.362C112.084 160.582 115.871 165.43 120.735 168.857L121.887 167.223C117.365 164.036 113.792 159.498 111.187 153.558L109.355 154.362ZM120.744 168.864C125.724 172.294 131.472 174 137.951 174V172C131.844 172 126.498 170.399 121.879 167.216L120.744 168.864ZM137.951 174C142.682 174 146.952 173.009 150.739 171.004L149.803 169.236C146.337 171.071 142.394 172 137.951 172V174ZM150.759 170.993C154.49 168.908 157.934 166.117 161.092 162.632L159.61 161.288C156.582 164.63 153.306 167.279 149.783 169.247L150.759 170.993ZM159.615 162.636L168.575 172.396L170.048 171.044L161.088 161.284L159.615 162.636ZM168.547 171.075C164.58 175.773 159.942 179.419 154.631 182.022L155.511 183.818C161.08 181.088 165.936 177.267 170.075 172.365L168.547 171.075ZM154.631 182.022C149.349 184.612 143.263 185.92 136.351 185.92V187.92C143.519 187.92 149.914 186.562 155.511 183.818L154.631 182.022Z" fill="#FFAC4A" mask="url(#path-2-outside-1_232_3)"/>
    </svg>
  )
}

const api3 = [
  ['WebNN Interfaces', 'browser-compatibility/api'],
  ['LiteRT Backend', 'browser-compatibility/litert'],
  ['Windows ML Backend', 'browser-compatibility/windowsml'],
  ['Core ML Backend', 'browser-compatibility/coreml'],
]

export function CompatibilityCards() {
  return (
  <Cards>
    {api3.map(([title, href], index) => (
      <Cards.Card 
        icon={<CompatibilityIcon />}
        key={index} 
        title={title} 
        href={`./${href}`} 
      />
    ))}
  </Cards>
  )
}

function OnnxRuntimeIcon() {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" className="reference-icon" viewBox="0 0 24 24"><path fill="currentColor" d="M23.033 11.296c-.05 0-.101 0-.151.013L18.86 3.87a.968.968 0 0 0-1.558-1.118L9.286 1.156a.97.97 0 0 0-.968-.854a.976.976 0 0 0-.967.967a.93.93 0 0 0 .113.453L1.219 10.68a.8.8 0 0 0-.251-.038a.968.968 0 0 0 0 1.935h.037l3.368 8.33a1.1 1.1 0 0 0-.088.403a.968.968 0 0 0 1.671.666l10.115.993c.1.427.49.728.943.728c.54 0 .967-.44.967-.967a1 1 0 0 0-.226-.628l5.114-8.872c.05.013.1.013.164.013c.54 0 .967-.44.967-.968a.97.97 0 0 0-.967-.98zm-5.806-7.275a1 1 0 0 0 .453.327L16.147 15.92c-.1.025-.189.05-.277.1L7.451 8.708a.8.8 0 0 0 .038-.251c0-.063-.013-.126-.013-.189zm4.876 8.507l-5.177 3.556a1 1 0 0 0-.126-.075l1.546-11.674h.012l3.946 7.288a.96.96 0 0 0-.201.905M6.383 7.502a.98.98 0 0 0-.83.955v.062l-3.455 2.048l5.378-7.702zm.352 1.91a.9.9 0 0 0 .352-.164l8.356 7.263a1.1 1.1 0 0 0-.063.352v.05l-9.31 3.845a.97.97 0 0 0-.604-.402zm8.896 8.117a.92.92 0 0 0 .503.289l.465 4.046a1.05 1.05 0 0 0-.452.452l-9.814-.955zm1.144.213a.96.96 0 0 0 .54-.867a1 1 0 0 0-.038-.25l4.738-3.255l-4.8 8.33zm.251-14.35l-9.889 4.31l-.113-.075l1.257-5.39h.037c.34 0 .641-.176.817-.44l7.891 1.57zm-15.091 8.22c0-.063-.013-.126-.013-.189l3.908-2.3c.076.076.164.151.264.202L4.825 20.243l-3.204-7.904c.188-.176.314-.44.314-.728"/></svg>
  )
}

const api4 = [
  ['WebNN EP Ops', 'onnx-runtime/ops'],
  ['ONNX Runtime API', 'https://onnxruntime.ai/docs/api/js/index.html']
]

export function OnnxRuntimeCards() {
  return (
  <Cards>
    {api4.map(([title, href], index) => (
      <Cards.Card 
        icon={<OnnxRuntimeIcon />}
        key={index} 
        title={title} 
        href={href} 
      />
    ))}
  </Cards>
  )
}

function TransformersJsIcon() {
  return (
    <svg xmlns="http://www.w3.org/2000/svg" className="reference-icon"viewBox="0 0 24 24"><path fill="currentColor" d="M1.445 11.506c0 1.102.167 2.158.484 3.156c-.038-.003-.069-.006-.106-.006c-.42 0-.801.16-1.07.452c-.345.373-.498.833-.431 1.293a1.6 1.6 0 0 0 .214.597a1.43 1.43 0 0 0-.484.758c-.065.245-.131.754.215 1.28l-.063.105c-.208.392-.22.837-.037 1.25c.279.626.97 1.118 2.313 1.647c.835.329 1.599.54 1.605.543c1.105.284 2.104.427 2.97.427c1.417 0 2.475-.384 3.152-1.144c1.538.265 2.79.14 3.592.006c.677.755 1.733 1.139 3.147 1.139c.864 0 1.864-.143 2.969-.428c.006-.002.77-.214 1.605-.543c1.343-.53 2.034-1.021 2.313-1.647a1.4 1.4 0 0 0-.037-1.25l-.063-.105c.346-.525.28-1.035.215-1.28a1.43 1.43 0 0 0-.484-.758q.166-.27.215-.597c.066-.46-.087-.92-.432-1.293a1.43 1.43 0 0 0-1.07-.452l-.06.002a10.4 10.4 0 0 0 .485-3.152c0-5.807-4.736-10.514-10.579-10.514c-5.842 0-10.578 4.707-10.578 10.514m10.578-9.483c5.273 0 9.548 4.246 9.548 9.483a9.4 9.4 0 0 1-.27 2.236l-.011-.015a1.42 1.42 0 0 0-1.108-.506c-.352 0-.714.115-1.076.344c-.24.151-.506.422-.78.76c-.253-.35-.607-.584-1.013-.647a1.5 1.5 0 0 0-.235-.018c-.926 0-1.482.8-1.693 1.518c-.105.243-.607 1.348-1.361 2.098c-1.169 1.16-1.446 2.353-.84 3.638a9.3 9.3 0 0 1-2.365-.006c.59-1.212.363-2.439-.843-3.632c-.755-.75-1.256-1.855-1.361-2.098c-.21-.718-.767-1.518-1.694-1.518q-.117 0-.234.018c-.406.063-.76.297-1.014.646c-.273-.337-.539-.608-.779-.76c-.362-.228-.724-.343-1.076-.343c-.427 0-.81.17-1.082.478a9.4 9.4 0 0 1-.26-2.193c0-5.237 4.275-9.483 9.547-9.483m-3.379 4.98a1.36 1.36 0 0 0-.629 2.563c.351.186.489-.526.836-.648c.311-.11.841.399 1.008.086a1.36 1.36 0 0 0-.562-1.84a1.4 1.4 0 0 0-.653-.16m6.84 0a1.36 1.36 0 0 0-1.215 2c.168.314.698-.195 1.009-.085c.347.122.486.835.838.648a1.36 1.36 0 0 0 .562-1.84a1.37 1.37 0 0 0-1.193-.722M5.729 8.423a.877.877 0 0 0-.877.877c0 .484.393.877.877.877a.877.877 0 0 0 .877-.877a.877.877 0 0 0-.877-.877m12.644 0a.88.88 0 0 0-.88.877a.88.88 0 0 0 .88.877a.877.877 0 0 0 .876-.877a.877.877 0 0 0-.877-.877m-9.58 3.037c-.178-.003-.279.11-.279.416c0 .81.388 2.125 1.428 2.924c.207-.712 1.346-1.283 1.508-1.201c.232.116.22.441.608.726c.388-.285.374-.61.605-.726c.163-.082 1.301.489 1.508 1.201c1.04-.799 1.428-2.114 1.428-2.924c0-1.221-1.583.64-3.541.649c-1.469-.007-2.727-1.056-3.264-1.065m-4.48 3.018c.58.365 1.696 2.275 2.106 3.018a.66.66 0 0 0 .582.353c.418 0 .746-.414.039-.94c-1.064-.79-.692-2.084-.184-2.164a.4.4 0 0 1 .066-.004c.462 0 .666.79.666.79s.596 1.49 1.622 2.508c.942.935 1.062 1.703.496 2.666c-.016-.004-.016.023-.148.215a1.9 1.9 0 0 1-.72.615c-.505.227-1.139.27-1.783.27a11.8 11.8 0 0 1-2.697-.337c-.03-.007-3.65-.956-3.192-1.822c.077-.145.204-.203.364-.203c.646 0 1.823.955 2.328.955c.113 0 .196-.086.228-.203c.225-.805-3.278-1.052-2.984-2.164c.052-.197.193-.276.39-.276c.854 0 2.77 1.493 3.173 1.493q.046 0 .064-.028c.201-.322.11-.586-1.309-1.44c-1.418-.853-2.431-1.328-1.865-1.94c.065-.072.157-.102.27-.102c.86 0 2.894 1.84 2.894 1.84s.549.568.881.568a.2.2 0 0 0 .186-.105c.235-.395-2.186-2.219-2.323-2.971c-.092-.51.064-.768.356-.768c0 .008.17-.029.494.176m16.226.592c-.137.752-2.558 2.576-2.323 2.97c.044.074.11.106.186.106c.332 0 .88-.568.88-.568s2.034-1.84 2.896-1.84c.112 0 .204.03.269.101c.566.613-.447 1.088-1.865 1.942c-1.419.853-1.51 1.116-1.309 1.44q.018.027.064.027c.402 0 2.318-1.493 3.172-1.493c.198 0 .34.079.391.276c.294 1.112-3.21 1.36-2.984 2.164c.032.117.115.203.228.203c.505 0 1.682-.955 2.328-.955c.16 0 .287.058.364.203c.459.866-3.163 1.815-3.192 1.822c-.596.154-1.66.336-2.697.336c-.636 0-1.261-.04-1.764-.26a1.9 1.9 0 0 1-.739-.624c-.04-.069-.102-.148-.142-.205c-.573-.968-.455-1.738.49-2.676c1.026-1.019 1.621-2.508 1.621-2.508s.205-.79.666-.79a.4.4 0 0 1 .067.004c.508.08.88 1.374-.184 2.165c-.707.525-.38.94.04.94a.66.66 0 0 0 .581-.354c.41-.743 1.527-2.653 2.106-3.018c.559-.353.99-.182.85.592"/></svg>
  )
}

const api5 = [
  ['Transformers.js API', 'https://huggingface.co/docs/transformers.js/en/api/transformers']
]

export function TransformersJsCards() {
  return (
  <Cards>
    {api5.map(([title, href], index) => (
      <Cards.Card 
        icon={<TransformersJsIcon />}
        key={index} 
        title={title} 
        href={href} 
      />
    ))}
  </Cards>
  )
}